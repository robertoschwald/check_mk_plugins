#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) Robert Oschwald 2019             
# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2

# Check for Cisco Small Business Switch FANs.
# Based on cisco_fan by Checkmk GmbH
#
# We probe:
# 1. sysDescr.0 (default, probably already cached) for "switch" (case insensitive)
# 2. CISCOSB-Physicaldescription-MIB::rlPhdUnitGenParamManufacturer.1 for "cisco",
# as this MIB is available on SB Switches (like SG300 Series), only
# 3. SNMPv2-SMI::enterprises.9.6.1.101.53.14.1.10.1 for "cisco" as well (case insensitive)
#
# The fans itself are on the following OIDs:
# rlEnvMonFanStatusDescr.67109249  : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109249 = STRING: fan1_unit1
# rlEnvMonFanStatusDescr.67109250  : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109250 = STRING: fan2_unit1
# rlEnvMonFanStatusDescr.67109251  : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109251 = STRING: fan3_unit1
# rlEnvMonFanStatusDescr.67109252  : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109252 = STRING: fan4_unit1
# rlEnvMonFanState.67109249        : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109249 = INTEGER: normal(1)
# rlEnvMonFanState.67109250        : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109250 = INTEGER: notFunctioning(6)
# rlEnvMonFanState.67109251        : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109251 = INTEGER: normal(1)
# rlEnvMonFanState.67109252        : .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109252 = INTEGER: notPresent(5)
#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file LICENSE.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.

from cmk.base.check_api import OID_END
from cmk.base.plugins.agent_based.agent_based_api.v1 import contains, exists, matches
from cmk.base.plugins.agent_based.utils.cisco_sensor_item import *  # pylint: disable=wildcard-import,unused-wildcard-import

# Cisco SB Switches do not identify as "cisco" as the other Cisco Switches do on oid .1.3.6.1.2.1.1.1.0
# We need to check 3 values to ensure a Cisco SB Switch:
DETECT_CISCO_SB = matches(".1.3.6.1.2.1.1.1.0", "(?i).*switch") and exists(
    ".1.3.6.1.4.1.9.6.1.101.53.14.1.10.1") and matches(".1.3.6.1.4.1.9.6.1.101.53.14.1.10.1", "(?i).*cisco")

cisco_fan_state_mapping = {
    "1": (0, "normal"),
    "2": (1, "warning"),
    "3": (2, "critical"),
    "4": (2, "shutdown"),
    "5": (3, "notPresent"),
    "6": (2, "notFunctioning"),
}


def inventory_cisco_sb_fan(info):
    return [
        (cisco_sensor_item(line[0], line[-1]), None)
        for line in info
        if line[1] != '5']


def check_cisco_sb_fan(item, params, info):
    for statustext, dev_state, oid_end in info:
        if cisco_sensor_item(statustext, oid_end) == item:
            state, state_readable = cisco_fan_state_mapping.get(
                dev_state, (3, "unknown[%s]" % dev_state)
            )
            yield state, "Status: %s" % state_readable


check_info["cisco_sb_fan"] = {
    'check_function': check_cisco_sb_fan,
    'inventory_function': inventory_cisco_sb_fan,
    'service_description': 'FAN %s',
    'snmp_info': ('.1.3.6.1.4.1.9.6.1.101.83.1.1.1', ['2', '3', OID_END]),
    'snmp_scan_function': lambda oid: "switch" in oid(".1.3.6.1.2.1.1.1.0").lower()
                                      and oid(".1.3.6.1.4.1.9.6.1.101.53.14.1.10.1") is not None
                                      and "cisco" in oid(".1.3.6.1.4.1.9.6.1.101.53.14.1.10.1").lower(),
}
